{"ast":null,"code":"var _jsxFileName = \"/home/sermasundarj/Desktop/rss/packages/react-client/src/components/commoncomponent/SigninForm.js\";\nimport React, { useState, Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button'; // import CssBaseline from '@material-ui/core/CssBaseline';\n\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useStyles } from '../../style/style';\nimport './App.css';\nimport { Mutation } from 'react-apollo';\nimport { LOGIN_MUTATION } from '../../gql-query/queries';\n\nfunction HigherOrderComponent(props) {\n  const classes = props.classes;\n}\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEmailChange = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.handlePasswordChange = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.avatarSignin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(LockOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }))), React.createElement(Typography, {\n      align: \"center\",\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(Mutation, {\n      mutation: LOGIN_MUTATION,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, (userLogin, {\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return 'Loading...';\n      if (error) return \"Error! \".concat(error.message);\n      return React.createElement(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        onSubmit: e => {\n          e.preventDefault();\n          userLogin({\n            variables: {\n              email: this.state.email,\n              password: this.state.password,\n              name: ''\n            }\n          }).then(res => {\n            if (res.data.userLogin.email === null) {\n              localStorage.removeItem('userLoginData');\n            } else {\n              localStorage.setItem('userLoginData', JSON.stringify(res.data.userLogin));\n              window.location.reload();\n            }\n          }).catch(res => {\n            console.log(res);\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"username\",\n        label: \"Username\",\n        name: \"username\",\n        autoComplete: \"username\",\n        value: this.state.email,\n        onChange: this.handleEmailChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        id: \"password\",\n        autoComplete: \"current-password\",\n        value: this.state.password,\n        onChange: this.handlePasswordChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Sign In\"));\n    }))) // <form>\n    //   <input type=\"text\" name=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleEmailChange} />\n    //   <input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handlePasswordChange}/>\n    //   <button type=\"button\" onClick={this.handleLogin}>Login</button>\n    // </form>\n    ;\n  } // handleLogin = e => {\n  //   console.log(\"EMail: \" + this.state.email);\n  //   console.log(\"Password: \" + this.state.password);\n  // };\n\n\n}\n\nexport default withStyles(useStyles)(SignIn); // export default function SignIn() {\n//   const classes = useStyles();\n//   // const [username, setUsername] = useState('');\n//   // const [password, setPassword] = useState('');\n//   let username, password;\n//   return (\n//     <Container component=\"main\" maxWidth=\"xs\">\n//       <CssBaseline />\n//       <div className={classes.paper}>\n//         <Avatar className={classes.avatar}>\n//           <LockOutlinedIcon />\n//         </Avatar>\n//         <Typography component=\"h1\" variant=\"h5\">\n//           Sign in\n//         </Typography>\n//         <Mutation mutation={LOGIN_MUTATION}>\n//         {(loginUser, { loading, error, data }) => {\n//         if (loading) return 'Loading...';\n//         if (error) return `Error! ${error.message}`;\n//         return(\n//             <form className={classes.form} noValidate\n//             onSubmit={e => {\n//               e.preventDefault();\n//               loginUser({ variables: { username: 'a', password: '1'} });\n//           }}>\n//         <TextField\n//           variant=\"outlined\"\n//           margin=\"normal\"\n//           required\n//           fullWidth \n//           id=\"username\"\n//           label=\"Username\"\n//           name=\"username\"\n//           autoComplete=\"username\"\n//         />\n//         <TextField\n//           variant=\"outlined\"\n//           margin=\"normal\"\n//           required\n//           fullWidth\n//           name=\"password\"\n//           label=\"Password\"\n//           type=\"password\"\n//           id=\"password\"\n//           autoComplete=\"current-password\"\n//         />\n//         <Button\n//           type=\"submit\"\n//           fullWidth\n//           variant=\"contained\"\n//           color=\"primary\"\n//           className={classes.submit}\n//         >\n//           Sign In\n//         </Button>\n//       </form>\n//         )\n//         }}\n//         </Mutation>\n//       </div>\n//     </Container>\n//   );\n// }","map":{"version":3,"sources":["/home/sermasundarj/Desktop/rss/packages/react-client/src/components/commoncomponent/SigninForm.js"],"names":["React","useState","Component","Avatar","Button","TextField","LockOutlinedIcon","Typography","Container","withStyles","useStyles","Mutation","LOGIN_MUTATION","HigherOrderComponent","props","classes","SignIn","constructor","handleEmailChange","e","setState","email","target","value","handlePasswordChange","password","state","username","render","paper","avatarSignin","avatar","userLogin","loading","error","data","message","form","preventDefault","variables","name","then","res","localStorage","removeItem","setItem","JSON","stringify","window","location","reload","catch","console","log","submit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,OAAO,WAAP;AAEA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,yBAA/B;;AAGA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAAA,QAC3BC,OAD2B,GACfD,KADe,CAC3BC,OAD2B;AAEpC;;AACD,MAAMC,MAAN,SAAqBd,SAArB,CAA+B;AAC7Be,EAAAA,WAAW,CAACH,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAMnBI,iBANmB,GAMCC,CAAC,IAAI;AACvB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAlB,OAAd;AACD,KARkB;;AAAA,SASnBC,oBATmB,GASIL,CAAC,IAAI;AAC1B,WAAKC,QAAL,CAAc;AAAEK,QAAAA,QAAQ,EAAEN,CAAC,CAACG,MAAF,CAASC;AAArB,OAAd;AACD,KAXkB;;AAEjB,SAAKG,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBF,MAAAA,QAAQ,EAAE;AAA1B,KAAb;AAED;;AAQDG,EAAAA,MAAM,GAAG;AAAA,UACCb,OADD,GACa,KAAKD,KADlB,CACCC,OADD;AAEP,WAEE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAK,MAAA,SAAS,EAAEA,OAAO,CAACc,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEd,OAAO,CAACe,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAEf,OAAO,CAACgB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADA,CADF,EAME,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAC,IAArC;AAA0C,MAAA,OAAO,EAAC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,EASE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEnB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,CAACoB,SAAD,EAAY;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAZ,KAAyC;AAC1C,UAAIF,OAAJ,EAAa,OAAO,YAAP;AACb,UAAIC,KAAJ,EAAW,wBAAiBA,KAAK,CAACE,OAAvB;AACX,aACI;AAAM,QAAA,SAAS,EAAErB,OAAO,CAACsB,IAAzB;AAA+B,QAAA,UAAU,MAAzC;AACA,QAAA,QAAQ,EAAElB,CAAC,IAAI;AACbA,UAAAA,CAAC,CAACmB,cAAF;AACAN,UAAAA,SAAS,CAAC;AAAEO,YAAAA,SAAS,EAAE;AAAElB,cAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWL,KAApB;AAA2BI,cAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,QAAhD;AAA0De,cAAAA,IAAI,EAAE;AAAhE;AAAb,WAAD,CAAT,CAA8FC,IAA9F,CAAmGC,GAAG,IAAI;AACxG,gBAAGA,GAAG,CAACP,IAAJ,CAASH,SAAT,CAAmBX,KAAnB,KAA6B,IAAhC,EAAqC;AACnCsB,cAAAA,YAAY,CAACC,UAAb,CAAwB,eAAxB;AACD,aAFD,MAEK;AACHD,cAAAA,YAAY,CAACE,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeL,GAAG,CAACP,IAAJ,CAASH,SAAxB,CAAtC;AACAgB,cAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,WAPD,EAOGC,KAPH,CAOST,GAAG,IAAI;AACdU,YAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AACD,WATD;AAUH,SAbC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAeJ,oBAAC,SAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,MAAM,EAAC,QAFT;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,SAAS,MAJX;AAKE,QAAA,EAAE,EAAC,UALL;AAME,QAAA,KAAK,EAAC,UANR;AAOE,QAAA,IAAI,EAAC,UAPP;AAQE,QAAA,YAAY,EAAC,UARf;AASE,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWL,KATpB;AAS2B,QAAA,QAAQ,EAAE,KAAKH,iBAT1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfI,EA0BJ,oBAAC,SAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,MAAM,EAAC,QAFT;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,SAAS,MAJX;AAKE,QAAA,IAAI,EAAC,UALP;AAME,QAAA,KAAK,EAAC,UANR;AAOE,QAAA,IAAI,EAAC,UAPP;AAQE,QAAA,EAAE,EAAC,UARL;AASE,QAAA,YAAY,EAAC,kBATf;AAUE,QAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWD,QAVpB;AAU8B,QAAA,QAAQ,EAAE,KAAKD,oBAV7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BI,EAuCJ,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,KAAK,EAAC,SAJR;AAKE,QAAA,SAAS,EAAET,OAAO,CAACuC,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAvCI,CADJ;AAoDC,KAxDD,CATF,CAFA,CAFF,CA0EE;AACA;AACA;AACA;AACA;AA9EF;AAkFD,GAjG4B,CAkG7B;AACA;AACA;AACA;;;AArG6B;;AAwG/B,eAAe7C,UAAU,CAACC,SAAD,CAAV,CAAsBM,MAAtB,CAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { useState ,Component}  from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\n// import CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { withStyles } from '@material-ui/core/styles';\nimport {useStyles} from '../../style/style';\nimport './App.css';\n\nimport { Mutation } from 'react-apollo';\nimport { LOGIN_MUTATION } from '../../gql-query/queries';\n\n\nfunction HigherOrderComponent(props) {\n  const { classes } = props;\n}\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    \n  }\n  \n  handleEmailChange = e => {\n    this.setState({ email: e.target.value });\n  };\n  handlePasswordChange = e => {\n    this.setState({ password: e.target.value});\n  };\n  render() {\n    const { classes } = this.props;\n    return (\n\n      <Container component=\"main\" maxWidth=\"xs\">\n      {/* <CssBaseline /> */}\n      <div className={classes.paper}>\n        <div className={classes.avatarSignin}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        </div>\n        <Typography align=\"center\" component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Mutation mutation={LOGIN_MUTATION}>\n        {(userLogin, { loading, error, data }) => {\n        if (loading) return 'Loading...';\n        if (error) return `Error! ${error.message}`;\n        return(\n            <form className={classes.form} noValidate\n            onSubmit={e => {\n              e.preventDefault();\n              userLogin({ variables: { email: this.state.email, password: this.state.password, name: ''} }).then(res => {\n                if(res.data.userLogin.email === null){\n                  localStorage.removeItem('userLoginData');\n                }else{\n                  localStorage.setItem('userLoginData', JSON.stringify(res.data.userLogin));\n                  window.location.reload();\n                }\n              }).catch(res => {\n                console.log(res)\n              });\n          }}>\n              \n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth \n          id=\"username\"\n          label=\"Username\"\n          name=\"username\"\n          autoComplete=\"username\"\n          value={this.state.email} onChange={this.handleEmailChange}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={this.state.password} onChange={this.handlePasswordChange}\n        />\n        \n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Sign In\n        </Button>\n        \n      </form>\n        )\n        }}\n        </Mutation>\n        \n      </div>\n    </Container>\n      // <form>\n      //   <input type=\"text\" name=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleEmailChange} />\n      //   <input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handlePasswordChange}/>\n      //   <button type=\"button\" onClick={this.handleLogin}>Login</button>\n      // </form>\n      \n      );\n    \n  }\n  // handleLogin = e => {\n  //   console.log(\"EMail: \" + this.state.email);\n  //   console.log(\"Password: \" + this.state.password);\n  // };\n}\n\nexport default withStyles(useStyles)(SignIn);\n// export default function SignIn() {\n//   const classes = useStyles();\n//   // const [username, setUsername] = useState('');\n//   // const [password, setPassword] = useState('');\n//   let username, password;\n//   return (\n//     <Container component=\"main\" maxWidth=\"xs\">\n//       <CssBaseline />\n//       <div className={classes.paper}>\n//         <Avatar className={classes.avatar}>\n//           <LockOutlinedIcon />\n//         </Avatar>\n//         <Typography component=\"h1\" variant=\"h5\">\n//           Sign in\n//         </Typography>\n//         <Mutation mutation={LOGIN_MUTATION}>\n//         {(loginUser, { loading, error, data }) => {\n//         if (loading) return 'Loading...';\n//         if (error) return `Error! ${error.message}`;\n//         return(\n//             <form className={classes.form} noValidate\n//             onSubmit={e => {\n//               e.preventDefault();\n//               loginUser({ variables: { username: 'a', password: '1'} });\n//           }}>\n              \n//         <TextField\n//           variant=\"outlined\"\n//           margin=\"normal\"\n//           required\n//           fullWidth \n//           id=\"username\"\n//           label=\"Username\"\n//           name=\"username\"\n//           autoComplete=\"username\"\n//         />\n//         <TextField\n//           variant=\"outlined\"\n//           margin=\"normal\"\n//           required\n//           fullWidth\n//           name=\"password\"\n//           label=\"Password\"\n//           type=\"password\"\n//           id=\"password\"\n//           autoComplete=\"current-password\"\n//         />\n        \n//         <Button\n//           type=\"submit\"\n//           fullWidth\n//           variant=\"contained\"\n//           color=\"primary\"\n//           className={classes.submit}\n//         >\n//           Sign In\n//         </Button>\n        \n//       </form>\n//         )\n//         }}\n//         </Mutation>\n        \n//       </div>\n//     </Container>\n//   );\n// }"]},"metadata":{},"sourceType":"module"}