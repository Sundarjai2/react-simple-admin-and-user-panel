{"ast":null,"code":"var _jsxFileName = \"/home/sermasundarj/Desktop/rss/packages/react-client/src/components/commoncomponent/SigninForm.js\";\nimport React, { useState, Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useStyles } from '../../style/style';\nimport { Mutation } from 'react-apollo';\nimport { LOGIN_MUTATION } from '../../gql-query/queries';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEmailChange = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.handlePasswordChange = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.handleLogin = e => {\n      console.log(\"EMail: \" + this.state.email);\n      console.log(\"Password: \" + this.state.password);\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    const classes = useStyles();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(LockOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(Mutation, {\n      mutation: LOGIN_MUTATION,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, (loginUser, {\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return 'Loading...';\n      if (error) return \"Error! \".concat(error.message);\n      return React.createElement(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        onSubmit: e => {\n          e.preventDefault();\n          loginUser({\n            variables: {\n              username: 'a',\n              password: '1'\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"username\",\n        label: \"Username\",\n        name: \"username\",\n        autoComplete: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        id: \"password\",\n        autoComplete: \"current-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Sign In\"));\n    }))) // <form>\n    //   <input type=\"text\" name=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleEmailChange} />\n    //   <input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handlePasswordChange}/>\n    //   <button type=\"button\" onClick={this.handleLogin}>Login</button>\n    // </form>\n    ;\n  }\n\n}\n\nexport default SignIn; // export default function SignIn() {\n//   const classes = useStyles();\n//   // const [username, setUsername] = useState('');\n//   // const [password, setPassword] = useState('');\n//   let username, password;\n//   return (\n//     <Container component=\"main\" maxWidth=\"xs\">\n//       <CssBaseline />\n//       <div className={classes.paper}>\n//         <Avatar className={classes.avatar}>\n//           <LockOutlinedIcon />\n//         </Avatar>\n//         <Typography component=\"h1\" variant=\"h5\">\n//           Sign in\n//         </Typography>\n//         <Mutation mutation={LOGIN_MUTATION}>\n//         {(loginUser, { loading, error, data }) => {\n//         if (loading) return 'Loading...';\n//         if (error) return `Error! ${error.message}`;\n//         return(\n//             <form className={classes.form} noValidate\n//             onSubmit={e => {\n//               e.preventDefault();\n//               loginUser({ variables: { username: 'a', password: '1'} });\n//           }}>\n//         <TextField\n//           variant=\"outlined\"\n//           margin=\"normal\"\n//           required\n//           fullWidth \n//           id=\"username\"\n//           label=\"Username\"\n//           name=\"username\"\n//           autoComplete=\"username\"\n//         />\n//         <TextField\n//           variant=\"outlined\"\n//           margin=\"normal\"\n//           required\n//           fullWidth\n//           name=\"password\"\n//           label=\"Password\"\n//           type=\"password\"\n//           id=\"password\"\n//           autoComplete=\"current-password\"\n//         />\n//         <Button\n//           type=\"submit\"\n//           fullWidth\n//           variant=\"contained\"\n//           color=\"primary\"\n//           className={classes.submit}\n//         >\n//           Sign In\n//         </Button>\n//       </form>\n//         )\n//         }}\n//         </Mutation>\n//       </div>\n//     </Container>\n//   );\n// }","map":{"version":3,"sources":["/home/sermasundarj/Desktop/rss/packages/react-client/src/components/commoncomponent/SigninForm.js"],"names":["React","useState","Component","Avatar","Button","CssBaseline","TextField","LockOutlinedIcon","Typography","Container","useStyles","Mutation","LOGIN_MUTATION","SignIn","constructor","props","handleEmailChange","e","setState","email","target","value","handlePasswordChange","password","handleLogin","console","log","state","username","classes","render","paper","avatar","loginUser","loading","error","data","message","form","preventDefault","variables","submit"],"mappings":"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AOE,QAAA,IAAI,EAAC,UAPP;AAQE,QAAA,EAAE,EAAC,UARL;AASE,QAAA,YAAY,EAAC,kBATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBI,EA4BJ,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,KAAK,EAAC,SAJR;AAKE,QAAA,SAAS,EAAEM,OAAO,CAACY,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA5BI,CADJ;AAyCC,KA7CD,CAPF,CAFA,CAFF,CA6DE;AACA;AACA;AACA;AACA;AAjEF;AAqED;;AApF4B;;AA2F/B,eAAe5B,MAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { useState ,Component}  from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {useStyles} from '../../style/style';\n\nimport { Mutation } from 'react-apollo';\nimport { LOGIN_MUTATION } from '../../gql-query/queries';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    const classes = useStyles();\n  }\n  \n  handleEmailChange = e => {\n    this.setState({ email: e.target.value });\n  };\n  handlePasswordChange = e => {\n    this.setState({ password: e.target.value});\n  };\n  render() {\n    \n    return (\n\n      <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Mutation mutation={LOGIN_MUTATION}>\n        {(loginUser, { loading, error, data }) => {\n        if (loading) return 'Loading...';\n        if (error) return `Error! ${error.message}`;\n        return(\n            <form className={classes.form} noValidate\n            onSubmit={e => {\n              e.preventDefault();\n              loginUser({ variables: { username: 'a', password: '1'} });\n          }}>\n              \n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth \n          id=\"username\"\n          label=\"Username\"\n          name=\"username\"\n          autoComplete=\"username\"\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n        \n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Sign In\n        </Button>\n        \n      </form>\n        )\n        }}\n        </Mutation>\n        \n      </div>\n    </Container>\n      // <form>\n      //   <input type=\"text\" name=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleEmailChange} />\n      //   <input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handlePasswordChange}/>\n      //   <button type=\"button\" onClick={this.handleLogin}>Login</button>\n      // </form>\n      \n      );\n    \n  }\n  handleLogin = e => {\n    console.log(\"EMail: \" + this.state.email);\n    console.log(\"Password: \" + this.state.password);\n  };\n}\n\nexport default SignIn;\n// export default function SignIn() {\n//   const classes = useStyles();\n//   // const [username, setUsername] = useState('');\n//   // const [password, setPassword] = useState('');\n//   let username, password;\n//   return (\n//     <Container component=\"main\" maxWidth=\"xs\">\n//       <CssBaseline />\n//       <div className={classes.paper}>\n//         <Avatar className={classes.avatar}>\n//           <LockOutlinedIcon />\n//         </Avatar>\n//         <Typography component=\"h1\" variant=\"h5\">\n//           Sign in\n//         </Typography>\n//         <Mutation mutation={LOGIN_MUTATION}>\n//         {(loginUser, { loading, error, data }) => {\n//         if (loading) return 'Loading...';\n//         if (error) return `Error! ${error.message}`;\n//         return(\n//             <form className={classes.form} noValidate\n//             onSubmit={e => {\n//               e.preventDefault();\n//               loginUser({ variables: { username: 'a', password: '1'} });\n//           }}>\n              \n//         <TextField\n//           variant=\"outlined\"\n//           margin=\"normal\"\n//           required\n//           fullWidth \n//           id=\"username\"\n//           label=\"Username\"\n//           name=\"username\"\n//           autoComplete=\"username\"\n//         />\n//         <TextField\n//           variant=\"outlined\"\n//           margin=\"normal\"\n//           required\n//           fullWidth\n//           name=\"password\"\n//           label=\"Password\"\n//           type=\"password\"\n//           id=\"password\"\n//           autoComplete=\"current-password\"\n//         />\n        \n//         <Button\n//           type=\"submit\"\n//           fullWidth\n//           variant=\"contained\"\n//           color=\"primary\"\n//           className={classes.submit}\n//         >\n//           Sign In\n//         </Button>\n        \n//       </form>\n//         )\n//         }}\n//         </Mutation>\n        \n//       </div>\n//     </Container>\n//   );\n// }"]},"metadata":{},"sourceType":"module"}