{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sermasundarj/Desktop/rss/packages/react-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/sermasundarj/Desktop/rss/packages/react-client/src/components/admincomponent/Edit.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    mutation editUser(\\n        $id: String!,\\n        $name: String!,\\n        $email: String!,\\n        $role: String!,\\n        $password: String!,\\n        $isAuth: String!) {\\n        editUser(\\n        id: $id,\\n        name: $name,\\n        email: $email,\\n        role: $role,\\n        password: $password,\\n        isAuth: $isAuth){\\n            name\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\nquery user($userId: String){\\n    user(id: $userId){\\n        _id\\n        name\\n        email\\n        role\\n        isAuth\\n        password\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport { Query, Mutation } from \"react-apollo\";\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { FormControl, FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\nimport Container from '@material-ui/core/Container';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport Header from '../commoncomponent/header';\nimport Content from '../homecomponent/content';\nimport ContactUs from '../homecomponent/contactus';\nimport Footer from '../commoncomponent/footer';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 240\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 240\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  MT1: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nconst GET_USERS = gql(_templateObject());\nconst UPDATE_USER = gql(_templateObject2());\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUserComplete = data => {\n      this.setState({\n        selectedAuth: data.user.isAuth,\n        selectRole: data.user.role\n      }); // console.log(data.student.gender) selectedRole: data.user.role, selectedUser: data.user._id\n    };\n\n    this.handleChange = ev => {\n      this.setState({\n        selectedAuth: ev.target.value\n      });\n    };\n\n    this.handleChangeRole = event => {\n      this.setState({\n        selectRole: event.target.value\n      });\n    };\n\n    this.state = {\n      selectedAuth: \"\",\n      selectRole: \"\"\n    }; // selectedRole: \"\", selectedUser: \"\"\n  }\n\n  render() {\n    const _this$state = this.state,\n          selectedAuth = _this$state.selectedAuth,\n          selectRole = _this$state.selectRole;\n    const classes = this.props.classes;\n    let name, roll, email, isAuth;\n    return React.createElement(Query, {\n      query: GET_USERS,\n      variables: {\n        userId: this.props.match.params.id\n      },\n      onCompleted: this.getUserComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return 'Loading...';\n      if (error) return \"Error! \".concat(error.message);\n      return React.createElement(Mutation, {\n        mutation: UPDATE_USER,\n        key: data.user._id,\n        onCompleted: () => this.props.history.push(\"/\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, (editUser, {\n        loading,\n        error\n      }) => React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(Container, {\n        fixed: true,\n        className: classes.MT1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Edit \", data.user.name, \" - Details\"))), React.createElement(\"div\", {\n        className: \"panel-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          editUser({\n            variables: {\n              id: data.user._id,\n              name: this.name.value,\n              email: this.email.value,\n              password: data.user.password,\n              role: this.state.selectRole,\n              isAuth: this.state.selectedAuth\n            }\n          });\n          this.name.value = \"\";\n          this.email.value = \"\";\n          this.selectedAuth = \"\";\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        type: \"text\",\n        label: \"Name\",\n        defaultValue: data.user.name,\n        className: classes.textField,\n        margin: \"normal\",\n        inputRef: el => this.name = el,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        label: \"Email\",\n        defaultValue: data.user.email,\n        className: classes.textField,\n        margin: \"normal\",\n        inputRef: el => this.email = el,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        required: true,\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"role-native-required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Role\"), React.createElement(NativeSelect, {\n        value: this.state.selectRole,\n        onChange: this.handleChangeRole,\n        name: \"role\",\n        inputProps: {\n          id: 'role-native-required'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Admin\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"User\")))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        component: \"fieldset\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        type: \"number\",\n        component: \"legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Is Authenticated\"), React.createElement(RadioGroup, {\n        \"aria-label\": \"isauth\",\n        name: \"isauth\",\n        onChange: this.handleChange,\n        value: this.state.selectedAuth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        value: \"true\",\n        control: React.createElement(Radio, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }),\n        label: \"Yes\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        value: \"false\",\n        control: React.createElement(Radio, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }),\n        label: \"No\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })))), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        className: \"btn btn-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Submit\")), loading && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Loading...\"), error && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Error :( Please try again ) \")))));\n    });\n  }\n\n}\n\nexport default withStyles(styles)(withRouter(Edit));","map":{"version":3,"sources":["/home/sermasundarj/Desktop/rss/packages/react-client/src/components/admincomponent/Edit.js"],"names":["React","Component","Link","withRouter","gql","Query","Mutation","TextField","withStyles","AppBar","Toolbar","Typography","Button","NativeSelect","FormLabel","FormControl","FormControlLabel","Radio","RadioGroup","Container","InputLabel","Select","Header","Content","ContactUs","Footer","styles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","flexGrow","menuButton","marginRight","spacing","title","container","display","flexWrap","textField","marginLeft","formControl","margin","minWidth","selectEmpty","marginTop","MT1","GET_USERS","UPDATE_USER","Edit","constructor","props","getUserComplete","data","setState","selectedAuth","user","isAuth","selectRole","role","handleChange","ev","target","value","handleChangeRole","event","state","render","classes","name","roll","email","userId","match","params","id","loading","error","message","_id","history","push","editUser","e","preventDefault","variables","password","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport { Query, Mutation } from \"react-apollo\";\n\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport {\n    FormControl,\n    FormControlLabel,\n    Radio,\n    RadioGroup\n} from \"@material-ui/core\";\nimport Container from '@material-ui/core/Container';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\n\nimport Header from '../commoncomponent/header';\nimport Content from '../homecomponent/content';\nimport ContactUs from '../homecomponent/contactus';\nimport Footer from '../commoncomponent/footer';\n\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 240,\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 240,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    MT1:{\n        marginTop: theme.spacing(2)\n    }\n})\n\nconst GET_USERS = gql`\nquery user($userId: String){\n    user(id: $userId){\n        _id\n        name\n        email\n        role\n        isAuth\n        password\n    }\n  }\n`;\n\nconst UPDATE_USER = gql`\n    mutation editUser(\n        $id: String!,\n        $name: String!,\n        $email: String!,\n        $role: String!,\n        $password: String!,\n        $isAuth: String!) {\n        editUser(\n        id: $id,\n        name: $name,\n        email: $email,\n        role: $role,\n        password: $password,\n        isAuth: $isAuth){\n            name\n        }\n    }\n`;\n\n\n\nclass Edit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { selectedAuth: \"\", selectRole: \"\"};\n        // selectedRole: \"\", selectedUser: \"\"\n    }\n\n    getUserComplete = data => {\n        this.setState({ selectedAuth: data.user.isAuth, selectRole: data.user.role });\n        // console.log(data.student.gender) selectedRole: data.user.role, selectedUser: data.user._id\n    }\n\n    handleChange = ev => {\n        this.setState({ selectedAuth: ev.target.value });\n    };\n    handleChangeRole = event => {\n        this.setState({ selectRole: event.target.value });\n    };\n    render() {\n        const { selectedAuth, selectRole } = this.state;\n        const { classes } = this.props;\n\n        let name, roll, email, isAuth;\n        return (\n            <Query query={GET_USERS} variables={{ userId: this.props.match.params.id }} onCompleted={this.getUserComplete}>\n                {({ loading, error, data }) => {\n                    if (loading) return 'Loading...';\n                    if (error) return `Error! ${error.message}`;\n                    return (\n                        <Mutation mutation={UPDATE_USER} key={data.user._id} onCompleted={() => this.props.history.push(`/`)}>\n                            {(editUser, { loading, error }) => (\n                                <div className=\"container\">\n                                    <Header></Header>\n                                    <Container fixed className={classes.MT1}>\n                                    <AppBar position=\"static\">\n                                        <Toolbar>\n                                            <Typography variant=\"h6\">\n                                                Edit {data.user.name} - Details\n                                            </Typography>\n                                        </Toolbar>\n                                    </AppBar>\n                                    {/* <div className=\"buttonBadge\"><Button variant=\"contained\" color=\"default\" href=\"/\" className={\"backBtn\"} >Home</Button></div> */}\n                                    <div className=\"panel-body\">\n\n                                        <form onSubmit={e => {\n                                            e.preventDefault();\n                                            editUser({ variables: { id: data.user._id, name: this.name.value, email: this.email.value, password: data.user.password, role: this.state.selectRole, isAuth: this.state.selectedAuth } });\n                                            this.name.value = \"\";\n                                            this.email.value = \"\";\n                                            this.selectedAuth = \"\";\n                                        }}>\n                                            {/* InputProps={{ readOnly: true, }} */}\n                                            <TextField required type=\"text\" label=\"Name\" defaultValue={data.user.name} className={classes.textField} margin=\"normal\" inputRef={el => this.name = el} /><br />\n                                            <TextField required label=\"Email\" defaultValue={data.user.email} className={classes.textField} margin=\"normal\" inputRef={el => this.email = el} /><br />\n                                            \n                                            <FormControl required className={classes.formControl}>\n                                                <InputLabel htmlFor=\"role-native-required\">Role</InputLabel>\n\n\n                                                <NativeSelect value={this.state.selectRole}\n                                                    onChange={this.handleChangeRole}\n                                                    name=\"role\"\n                                                    inputProps={{\n                                                        id: 'role-native-required',\n                                                    }}>\n                                                    <React.Fragment>\n                                                        <option value=\"\" ></option>\n                                                        <option value=\"1\" >Admin</option>\n                                                        <option value=\"2\" >User</option>\n                                                    </React.Fragment>\n                                                </NativeSelect>\n\n\n                                            </FormControl><br />\n\n                                            <div>\n                                                <FormControl component=\"fieldset\" className={classes.formControl}>\n                                                    <FormLabel type=\"number\" component=\"legend\">Is Authenticated</FormLabel>\n                                                    <RadioGroup aria-label=\"isauth\" name=\"isauth\" onChange={this.handleChange} value={this.state.selectedAuth}>\n                                                        {/* value={value} onChange={handleChange} */}\n                                                        <FormControlLabel\n                                                            value=\"true\"\n                                                            control={<Radio color=\"primary\" />}\n                                                            label=\"Yes\"\n                                                            labelPlacement=\"start\"\n                                                        />\n                                                        <FormControlLabel\n                                                            value=\"false\"\n                                                            control={<Radio color=\"primary\" />}\n                                                            label=\"No\"\n                                                            labelPlacement=\"start\"\n                                                        />\n                                                    </RadioGroup>\n                                                </FormControl>\n                                            </div>\n                                           \n                                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" className=\"btn btn-success\">Submit</Button>\n                                        </form>\n                                        {loading && <p>Loading...</p>}\n                                        {error && <p>Error :( Please try again ) </p>}\n                                    </div>\n                                    </Container>\n                                </div>\n                            )}\n                        </Mutation>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\nexport default withStyles(styles)(withRouter(Edit));"]},"metadata":{},"sourceType":"module"}